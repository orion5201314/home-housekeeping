class e{constructor(e){this._map=new Map,Object.keys(e).forEach((t=>{if("string"!=typeof t)throw new Error("Cannot use non-string keys");const r=e[t];this[t]=r.value,this[t+"_T"]=r.text||null,this._map.set(r.value,r.text||null)}))}text(e){return this._map.get(e)}map(e,t=[]){if(!Array.isArray(t))throw new Error("The parameter [initWrapper] must be an array");return Array.from(this._map).reduce(((t,r)=>(t.push(e(r[1],r[0])),t)),t)}has(e){return this._map.has(e)}}const t=new Proxy(new e({WALLET:{text:"钱包余额",value:1},WECHAT_CHANGE:{text:"微信零钱",value:2},BANK_CARD:{text:"银行卡",value:3},WECHAT_COLLECTION_CODE:{text:"微信收款码",value:4},ALIPAY_COLLECTION_CODE:{text:"支付宝收款码",value:5}}),{get:(e,t,r)=>Reflect.get(e,t,r),set(){throw new Error("Cannot assign value to enum")},deleteProperty(){throw new Error("Cannot delete enum value")}});const r={CLOSE:0,SUCCESS:1,FAIL:2};export{t as B,r as P};
